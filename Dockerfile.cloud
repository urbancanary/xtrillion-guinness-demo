FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    sqlite3 \
    && rm -rf /var/lib/apt/lists/*

# Install Google Cloud SDK for database downloads
RUN curl https://sdk.cloud.google.com | bash && \
    /root/google-cloud-sdk/install.sh --quiet && \
    /root/google-cloud-sdk/bin/gcloud components update

# Add gcloud to PATH
ENV PATH="/root/google-cloud-sdk/bin:${PATH}"

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies first
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy ONLY application code - INCLUDING DATABASES FOR RELIABILITY
COPY . .

# Clean up unnecessary files but KEEP databases
RUN rm -rf __pycache__/ *.log test_*.py debug_*.py archive/ 

# Ensure critical databases are present
RUN ls -la *.db && echo "✅ Local databases found" || echo "⚠️ Some databases missing" 

# Create data directory for GCS downloads
RUN mkdir -p /app/data

# Make database download script executable (if it exists)
RUN [ -f download_databases_from_gcs.sh ] && chmod +x download_databases_from_gcs.sh || echo "Download script not found"

# Set environment variables for XTrillion-GA10
ENV PORT=8080
ENV PYTHONPATH="/app"
ENV DATA_DIR="/app/data"
ENV SERVICE_NAME="xtrillion-ga10"
ENV ENVIRONMENT="production"
ENV DATABASE_SOURCE="gcs"

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose port
EXPOSE 8080

# Create startup script that uses LOCAL databases (more reliable)
RUN echo '#!/bin/bash' > /app/startup.sh && \
    echo 'set -e' >> /app/startup.sh && \
    echo 'echo "🚀 Starting XTrillion-GA10 Bond Analytics Service..."' >> /app/startup.sh && \
    echo 'echo "📊 Service: xtrillion-ga10"' >> /app/startup.sh && \
    echo 'echo "🌐 Environment: $ENVIRONMENT"' >> /app/startup.sh && \
    echo 'echo "💾 Database Source: LOCAL (embedded for reliability)"' >> /app/startup.sh && \
    echo 'echo ""' >> /app/startup.sh && \
    echo '# Use LOCAL databases (faster and more reliable than GCS download)' >> /app/startup.sh && \
    echo 'if [ -f "bonds_data.db" ] && [ -f "validated_quantlib_bonds.db" ]; then' >> /app/startup.sh && \
    echo '    echo "✅ Using local embedded databases"' >> /app/startup.sh && \
    echo '    export DATABASE_PATH="/app/bonds_data.db"' >> /app/startup.sh && \
    echo '    export VALIDATED_DB_PATH="/app/validated_quantlib_bonds.db"' >> /app/startup.sh && \
    echo 'else' >> /app/startup.sh && \
    echo '    echo "❌ Critical databases missing! Check Docker build."' >> /app/startup.sh && \
    echo '    ls -la *.db || echo "No .db files found"' >> /app/startup.sh && \
    echo '    exit 1' >> /app/startup.sh && \
    echo 'fi' >> /app/startup.sh && \
    echo 'echo ""' >> /app/startup.sh && \
    echo 'echo "🎯 Starting XTrillion-GA10 API server with local databases..."' >> /app/startup.sh && \
    echo 'python3 google_analysis10_api.py' >> /app/startup.sh && \
    chmod +x /app/startup.sh

# Start XTrillion-GA10 service
CMD ["/app/startup.sh"]
