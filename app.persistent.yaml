# XTrillion GA10 - PRODUCTION with Persistent Database Architecture
# Uses Cloud Storage for database persistence + scheduled daily updates

runtime: python311

# Optimized entrypoint for production
entrypoint: gunicorn --bind :$PORT --workers 2 --threads 4 --timeout 60 --preload --max-requests 1000 google_analysis10_api:app

env_variables:
  PORT: 8080
  ENVIRONMENT: production
  DATABASE_SOURCE: persistent_storage
  # Databases stored in Cloud Storage, cached locally on instance
  DATABASE_PATH: /tmp/bonds_data.db
  VALIDATED_DB_PATH: /tmp/validated_quantlib_bonds.db
  BLOOMBERG_DB_PATH: /tmp/bloomberg_index.db
  # Cloud Storage bucket for database persistence
  DATABASE_BUCKET: xtrillion-ga10-databases
  PYTHONPATH: /srv

# CRITICAL: Warm instances + reasonable scaling
automatic_scaling:
  min_instances: 1              # Always warm (eliminates cold start delays)
  max_instances: 5              # Reasonable for bond analytics
  target_cpu_utilization: 0.6
  target_throughput_utilization: 0.8

# Optimized resources for QuantLib + database operations  
resources:
  cpu: 2                        # More CPU for calculations
  memory_gb: 8                  # More memory for database caching
  disk_size_gb: 20              # Space for local database cache

# Enable Cloud Storage access
beta_settings:
  cloud_sql_instances: []

# Request timeout optimization
inbound_services:
- warmup

# Health checks
readiness_check:
  path: "/health"
  check_interval_sec: 5
  timeout_sec: 4
  failure_threshold: 2
  success_threshold: 2

liveness_check:
  path: "/health" 
  check_interval_sec: 30
  timeout_sec: 4
  failure_threshold: 4
  success_threshold: 2