# XTrillion GA10 - PRODUCTION OPTIMIZED Dockerfile
# Eliminates 155MB database download on cold start

FROM python:3.11-slim

# Install system dependencies (minimal for production)
RUN apt-get update && apt-get install -y \
    sqlite3 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies first (for Docker layer caching)
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# CRITICAL: Pre-bake databases into container (eliminates GCS download)
COPY bonds_data.db ./bonds_data.db
COPY validated_quantlib_bonds.db ./validated_quantlib_bonds.db  
COPY bloomberg_index.db ./bloomberg_index.db

# Verify databases are properly copied (fail build if missing)
RUN ls -la bonds_data.db validated_quantlib_bonds.db bloomberg_index.db && \
    echo "âœ… Database sizes:" && \
    du -h bonds_data.db validated_quantlib_bonds.db bloomberg_index.db

# Copy core application files (selective copy for smaller image)
COPY google_analysis10_api.py .
COPY google_analysis10.py .
COPY bloomberg_accrued_calculator.py .
COPY bond_description_parser.py .
COPY bond_master_hierarchy.py .
COPY bond_master_hierarchy_enhanced.py .
COPY treasury_detector.py .
COPY api_cash_flow_extension.py .
COPY xtrillion_cash_flow_calculator.py .
COPY gcs_database_manager.py .

# Copy essential directories
COPY core/ ./core/
COPY utils/ ./utils/

# Set production environment variables
ENV PORT=8080
ENV PYTHONPATH="/app"
ENV ENVIRONMENT="production"
ENV DATABASE_SOURCE="embedded"
ENV DATABASE_PATH="/app/bonds_data.db"
ENV VALIDATED_DB_PATH="/app/validated_quantlib_bonds.db"
ENV BLOOMBERG_DB_PATH="/app/bloomberg_index.db"

# Health check (lightweight)
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:$PORT/health || exit 1

# Expose port
EXPOSE 8080

# OPTIMIZED STARTUP: Direct API start (no database download logic)
CMD ["python3", "google_analysis10_api.py"]