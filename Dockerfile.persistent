# XTrillion GA10 - PRODUCTION ARCHITECTURE with Persistent Storage
# Databases stored separately, updated daily via scheduled job

FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    sqlite3 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy core application files (NO databases - they're external)
COPY google_analysis10_api.py .
COPY google_analysis10.py .
COPY bloomberg_accrued_calculator.py .
COPY bond_description_parser.py .
COPY bond_master_hierarchy.py .
COPY bond_master_hierarchy_enhanced.py .
COPY treasury_detector.py .
COPY api_cash_flow_extension.py .
COPY xtrillion_cash_flow_calculator.py .

# Copy essential directories
COPY core/ ./core/
COPY utils/ ./utils/

# Create data mount point for persistent databases
RUN mkdir -p /data

# Set production environment variables for persistent storage
ENV PORT=8080
ENV PYTHONPATH="/app"
ENV ENVIRONMENT="production"
ENV DATABASE_SOURCE="persistent"
ENV DATABASE_PATH="/data/bonds_data.db"
ENV VALIDATED_DB_PATH="/data/validated_quantlib_bonds.db"
ENV BLOOMBERG_DB_PATH="/data/bloomberg_index.db"

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:$PORT/health || exit 1

# Expose port
EXPOSE 8080

# Start API (databases expected to be mounted at /data)
CMD ["python3", "google_analysis10_api.py"]