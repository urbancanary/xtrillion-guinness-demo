name: Update Treasury Yields in GCS

on:
  schedule:
    # 6 PM ET Monday-Saturday (11 PM UTC during EDT, 10 PM UTC during EST)
    # Runs Mon-Sat to capture Fri data on Saturday for weekend use
    - cron: '0 23 * * 1-6'
  workflow_dispatch:  # Allow manual trigger

jobs:
  update-yields:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install google-cloud-storage
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Update Treasury yields locally
      run: |
        python us_treasury_yield_fetcher.py
    
    - name: Upload to GCS
      run: |
        python sync_databases_with_gcs.py --upload-only bonds_data.db
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}
    
    - name: Test treasury data via API
      run: |
        # Wait for deployment to pick up new data
        sleep 30
        
        # Test production API
        response=$(curl -s -X GET https://future-footing-414610.uc.r.appspot.com/api/v1/treasury/status \
          -H "X-API-Key: ${{ secrets.GA10_API_KEY }}")
        
        echo "Treasury Status Response:"
        echo "$response" | python3 -m json.tool
        
        # Check if data is fresh
        is_fresh=$(echo "$response" | python3 -c "import sys, json; print(json.load(sys.stdin).get('treasury_data', {}).get('is_fresh', False))")
        
        if [ "$is_fresh" = "True" ]; then
          echo "✅ Treasury data successfully updated and is fresh"
        else
          echo "❌ Treasury data update may have failed"
          exit 1
        fi